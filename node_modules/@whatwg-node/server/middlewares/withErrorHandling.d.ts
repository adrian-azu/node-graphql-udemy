import { DefaultServerAdapterContext, ServerAdapterBaseObject } from '../types';
export declare function createDefaultErrorHandler<TServerContext = DefaultServerAdapterContext>(ResponseCtor?: typeof Response): ErrorHandler<TServerContext>;
export type ErrorHandler<TServerContext> = (e: any, request: Request, ctx: TServerContext) => Response | Promise<Response>;
export declare function withErrorHandling<TServerContext = DefaultServerAdapterContext, TBaseObject extends ServerAdapterBaseObject<TServerContext> = ServerAdapterBaseObject<TServerContext>>(obj: TBaseObject, onError?: ErrorHandler<TServerContext>): TBaseObject;
